# Configuration pour le monitoring météo et le contrôle d'EKOS

# Configuration de l'observatoire
observatory:
  name: "Mon Observatoire"
  
# Configuration de l'API Weather Alpaca SafetyMonitor
alpaca:
  host: "127.0.0.1"    # Adresse IP ou nom d'hôte du serveur Alpaca
  port: 11111          # Port du serveur Alpaca
  device_number: 0     # Numéro du dispositif SafetyMonitor
  poll_interval: 60    # Intervalle de vérification en secondes
  timeout: 5           # Délai d'attente des requêtes en secondes
  max_retries: 3       # Nombre maximal de tentatives en cas d'échec
  retry_delay: 1000    # Délai entre les tentatives en millisecondes
  
# Configuration de connexion à EKOS via DBUS
ekos:
  dbus_service: "org.kde.kstars"
  dbus_path: "/KStars/Ekos"
  dbus_interface: "org.kde.kstars.Ekos"
  scheduler_interface: "org.kde.kstars.Ekos.Scheduler"
  
# Configuration du logging
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  file: "kstars_monitoring.log"
  max_size: 10485760  # 10 MB
  backup_count: 5 

def get_scheduler_status_string(status: int) -> str:
    """
    Convertit le code d'état numérique en chaîne descriptive.
    
    Args:
        status: Code d'état numérique
        
    Returns:
        Description textuelle de l'état
    """
    status_map = {
        0: "Arrêté",
        1: "En cours d'exécution",
        2: "En pause",
        # Ajoutez d'autres états si nécessaire
    }
    return status_map.get(status, f"État inconnu ({status})") 